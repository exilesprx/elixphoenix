name: elixphoenix

services:
  app:
    build:
      context: .docker/elixir
      target: dev
    tty: true
    stdin_open: true
    volumes:
      - app:/usr/src/app
    environment:
      PHX_PORT: ${APP_PORT:-4000}
      PHX_IP: ${APP_IP:-0.0.0.0}
      PHX_HOST: ${APP_HOST:-localhost}
      SECRET_KEY_BASE: wXjssXvWNHQ0R8LQy1JJmMINf/bpYeI4gdSG40jk1dzSsO6vZcE2JMWQ68qdlgle
      DATABASE_HOST: database
      DATABASE_NAME: ${POSTGRES_DB:-elixphoenix}
      DATABASE_USER: ${POSTGRES_USER:-postgres}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    labels:
      - "traefik.http.routers.app.rule=Host(`${APP_HOST:-localhost}`)"
      - "traefik.http.routers.app.tls=false"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=${APP_PORT:-4000}"

  database:
    build:
      context: .docker/postgres
      target: dev
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-elixphoenix}",
        ]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 3s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-elixphoenix}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}

  traefik:
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${APP_HOST:-localhost}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.tls=false"
      - "traefik.http.routers.dashboard.entrypoints=web"
    ports:
      - "8080:8080"
      - "8081:8081"

volumes:
  app:
    driver: local
    driver_opts:
      type: none
      device: .
      o: bind
